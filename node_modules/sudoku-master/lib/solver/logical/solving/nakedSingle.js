"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const remeda_1 = require("remeda");
const solvingResult_1 = require("./solvingResult");
const candidate_1 = require("../../../utils/candidate");
const getNakedSingleSolvingResult = ([index, digits]) => {
    return solvingResult_1.getSolvingResult("Naked Single", index, digits[0]);
};
/**
 * Finds a cell containing only one candidate.
 *
 * @since 0.0.2
 *
 * @param {SudokuGrid} grid The grid to solve.
 * @param {number} [skip=0] Indicates to skip some of the solving results.
 * @param {number} [count=1] Indicates the maximum amount of results to return.
 * @returns {readonly SolvingResult[]} A list of objects describing where a digit can be placed.
 *
 * @see http://sudopedia.enjoysudoku.com/Naked_Single.html
 */
function solveNakedSingle(grid, skip = 0, count = 1) {
    const candidates = grid.candidates.size > 0 ? grid.candidates : candidate_1.getCandidates(grid.digits);
    return remeda_1.pipe([...candidates.entries()], remeda_1.filter((input) => input[1].length === 1), remeda_1.drop(skip), remeda_1.take(count), remeda_1.map(getNakedSingleSolvingResult));
}
exports.solveNakedSingle = solveNakedSingle;
