import { SudokuGrid } from "../../../../types";
import { EliminationResult } from "../types";
/**
 * When all candidates for a digit in a house are located inside the intersection with another house, we can eliminate
 * the remaining candidates from the second house outside the intersection.
 *
 * @since 0.0.3
 *
 * @param grid The grid to solve.
 * @returns A list of objects describing where a candidate can be eliminated.
 *
 * @example
 * const grid = parseGrid("2.....1..14..2..83..3.1.5.............67...5.8.92.13.......32....18.2.3....16..94", true);
 * const results = eliminateLockedCandidates(grid);
 * eliminationDescription(results[0]);
 * // => "Locked Candidates Type 1 (Pointing): 4 in b3 => r46c8<>4"
 *
 * @see http://sudopedia.enjoysudoku.com/Locked_Candidates.html
 */
export declare function eliminateLockedCandidates(grid: SudokuGrid): readonly EliminationResult[];
