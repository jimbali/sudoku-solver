"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
function getCellRow(index) {
    const rowIndex = Math.floor(index / 9);
    return constants_1.HOUSES_LIST.find((house) => house.type === "row" && house.index === rowIndex);
}
exports.getCellRow = getCellRow;
function getCellCol(index) {
    const colIndex = index % 9;
    return constants_1.HOUSES_LIST.find((house) => house.type === "col" && house.index === colIndex);
}
exports.getCellCol = getCellCol;
function getCellBox(index) {
    const boxIndex = (Math.floor(index / 3) % 3) + Math.floor(index / 9 / 3) * 3;
    return constants_1.HOUSES_LIST.find((house) => house.type === "box" && house.index === boxIndex);
}
exports.getCellBox = getCellBox;
/**
 * Get the row, column and box on which a cell is located.
 *
 * @private
 * @since 0.0.1
 *
 * @param {GridIndex} index The index of a cell in the grid.
 * @returns {readonly [House, House, House]} A tuple containing the row, the column and the box of the given cell.
 *
 * @example
 * const [row, col, box] = getCellHouses(45);
 */
function getCellHouses(index) {
    return [getCellRow(index), getCellCol(index), getCellBox(index)];
}
exports.getCellHouses = getCellHouses;
